# Pylint Configuration
[tool.pylint.MAIN]
load-plugins = "pylint.extensions.bad_builtin"
ignore-paths = [".venv/.*"]

[tool.pylint.'MESSAGES CONTROL']
disable=["raw-checker-failed",
         "bad-inline-option",
        "locally-disabled",
        "file-ignored",
        "suppressed-message",
        "useless-suppression",
        "deprecated-pragma",
        "use-symbolic-message-instead",
        "wrong-spelling-in-comment",
        "redefined-builtin",
        "unsupported-binary-operation",
        "duplicate-code",
        "no-member",
        "ungrouped-imports",
        "raise-missing-from"]
enable=["c-extension-no-member", "broad-exception-caught"]

[tool.pylint.FORMAT]
max-line-length=120
max-module-lines=500
max-args=8

[tool.pylint.DEPRECATED_BUILTINS]
bad-functions=["print", "input"]

# Flake8 Configuration
[tool.flake8]
max-line-length = 120
ignore = ["E203", "W503"]
enable = ["W504"]

# mypy Configuration
[tool.mypy]
strict = false
implicit_optional = true
follow_imports = "silent"
ignore_missing_imports = true
show_column_numbers = true
disable_error_code = ["no-untyped-call", "override", "misc", "import-untyped"]

# Black Configuration
[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

# isort Configuration
[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
known_first_party = ["common", "tutorial_app"]

# Coverage Configuration
[tool.coverage.run]
source = ["src", "code"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/venv/*",
    "*/.venv/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit Configuration
[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101", "B601"]  # Skip assert checks and shell usage

# Safety Configuration
[tool.safety]
ignore = [
    "12345",  # Example vulnerability ID to ignore
]
