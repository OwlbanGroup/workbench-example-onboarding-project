# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Tests for auto continuing associated tasks."""
import sys

try:
    from common import testing, wb_svc_client
except ImportError:
    # this helps with debugging and allows direct importing or execution
    sys.path.append("..")
    from common import testing, wb_svc_client

PROJECT_NAME = "test"


def test_project_helpers():
    """Test a project using built in helpers."""
    # The testing module contains some test compatible helpers.
    # These helpers can either get an object or ensure the state of an object.
    # If there is an error in these helpers, they will raise TestFail automatically.
    _ = testing.get_project(PROJECT_NAME)


def test_project_manual():
    """Manually test a project directly with the AI Workbench client."""
    # It is also possible to write manual steps that interact directly with workbench's API.
    # tests should return successfully to indicate they passed
    # they should raise TestFail when they do not
    # TestFail can include a message name that will be read from the yaml file
    #
    # This is functionally identical to test_project_helpers.
    project = wb_svc_client.get_project(PROJECT_NAME)
    if project is None:
        raise testing.TestFail("info_wait_for_project")
    project = project.get("data", {}).get("project", None)
    if project is None:
        raise testing.TestFail("info_wait_for_project")


if __name__ == "__main__":
    sys.stdout.write("---------------\n")
    # you can use this space for testing while you are
    # developing your tests
    test_project_helpers()
